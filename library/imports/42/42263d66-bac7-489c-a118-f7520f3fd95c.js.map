{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","xSpeed","accelLeft","accelRight","jumpAudio","default","url","AudioClip","playJumpAudio","audioEngine","play","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionInOut","jumpDown","easeCubicActionIn","callFunc","repeatForever","sequence","setAccelDirection","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","a","d","KEY_UP","onLoad","jumpAction","node","runAction","start","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        jumpHeight: 0,\n        jumpDuration: 0,\n        maxMoveSpeed: 0,\n        accel: 0,\n        xSpeed: 0,\n        accelLeft: false,\n        accelRight: false,\n        jumpAudio: {\n            default: null,\n            url: cc.AudioClip\n        }\n\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n\n    playJumpAudio: function () {\n        cc.audioEngine.play(this.jumpAudio, false,1);\n    },\n    /**\n     * 设置跳跃的行为\n     *\n     * @returns {cc.ActionInterval}\n     */\n    setJumpAction: function () {\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionInOut());\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        var callFunc = cc.callFunc(this.playJumpAudio, this);\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callFunc));\n    },\n\n    /**\n     * 监听按键获得加速度的方向\n     */\n    setAccelDirection: function () {\n        var self = this;\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event) {\n            switch (event.keyCode) {\n                case cc.KEY.a:\n                    self.accelLeft = true;\n                    break;\n                case cc.KEY.d:\n                    self.accelRight = true;\n                    break;\n            }\n        });\n\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event) {\n            switch (event.keyCode) {\n                case cc.KEY.a:\n                    self.accelLeft = false;\n                    break;\n                case cc.KEY.d:\n                    self.accelRight = false;\n                    break;\n            }\n        })\n\n    },\n\n    onLoad() {\n        const jumpAction = this.setJumpAction();\n        this.node.runAction(jumpAction);\n        this.setAccelDirection();\n    },\n\n    start() {\n\n    },\n\n    update(dt) {\n        //时间*加速度，获得速度，速度*时间，获得移动的距离->设定node的位置\n        if (this.accelLeft) {\n            this.xSpeed -= this.accel * dt\n        } else if (this.accelRight) {\n            this.xSpeed += this.accel * dt;\n        }\n\n        //速度不能大于设定好的最大速度\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed)\n        }\n\n        this.node.x += this.xSpeed * dt;\n    },\n});\n"]}