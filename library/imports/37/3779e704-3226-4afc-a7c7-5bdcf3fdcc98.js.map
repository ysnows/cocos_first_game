{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","maxStarCreateDuration","minStarCreateDuration","onLoad","timer","duration","random0To1","start","getPlayerDistance","position","game","player","getPosition","mPosition","node","pDistance","onPicked","spawnNewStar","gainScore","destroy","update","dt","distance","gameOver","opacityRatio","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAY,EADJ;AAERC,+BAAuB,CAFf;AAGRC,+BAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBQ,KAHP;;AAwBL;;AAEAC,UA1BK,oBA0BI;AACL,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,QAAL,GAAgB,KAAKH,qBAAL,GAA6BP,GAAGW,UAAH,KAAkB,KAAKL,qBAApE;AACH,KA7BI;AA+BLM,SA/BK,mBA+BG,CAEP,CAjCI;;;AAmCLC,uBAAmB,6BAAY;AAC3B,YAAIC,WAAW,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAf;AACA,YAAIC,YAAY,KAAKC,IAAL,CAAUF,WAAV,EAAhB;;AAEA,eAAOjB,GAAGoB,SAAH,CAAaF,SAAb,EAAwBJ,QAAxB,CAAP;AAEH,KAzCI;AA0CLO,cAAU,oBAAY;AAClB,aAAKN,IAAL,CAAUO,YAAV;AACA,aAAKP,IAAL,CAAUQ,SAAV;AACA,aAAKJ,IAAL,CAAUK,OAAV;AACH,KA9CI;AA+CLC,UA/CK,kBA+CEC,EA/CF,EA+CM;AACP;AACA,YAAIC,WAAW,KAAKd,iBAAL,EAAf;AACA,YAAIc,WAAW,KAAKtB,UAApB,EAAgC;AAC5B,iBAAKgB,QAAL;AACH;;AAED,YAAI,KAAKZ,KAAL,GAAa,KAAKC,QAAtB,EAAgC;AAC5B;AACA,iBAAKK,IAAL,CAAUa,QAAV;AACA;AACH;;AAED;AACA,YAAIC,eAAe,IAAI,KAAKpB,KAAL,GAAa,KAAKC,QAAzC;AACA,YAAIoB,aAAa,EAAjB;AACA,aAAKX,IAAL,CAAUY,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWJ,gBAAgB,MAAMC,UAAtB,CAAX,CAAjC;;AAEA,aAAKrB,KAAL,IAAciB,EAAd;AACH;AAlEI,CAAT","file":"Star.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        pickRadius: 60,\n        maxStarCreateDuration: 5,\n        minStarCreateDuration: 3\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        this.timer = 0;\n        this.duration = this.minStarCreateDuration + cc.random0To1() * this.maxStarCreateDuration;\n    },\n\n    start() {\n\n    },\n\n    getPlayerDistance: function () {\n        var position = this.game.player.getPosition();\n        var mPosition = this.node.getPosition();\n\n        return cc.pDistance(mPosition, position);\n\n    },\n    onPicked: function () {\n        this.game.spawnNewStar();\n        this.game.gainScore();\n        this.node.destroy();\n    },\n    update(dt) {\n        //1. 每帧判断player和星星的距离,如果达到设定的距离，将现在的星星销毁，生成新的星星；并给主角加积分\n        let distance = this.getPlayerDistance();\n        if (distance < this.pickRadius) {\n            this.onPicked();\n        }\n\n        if (this.timer > this.duration) {\n            //如果超时了，让小星星消失，游戏结束\n            this.game.gameOver();\n            return;\n        }\n\n        // 根据 Game 脚本中的计时器更新星星的透明度\n        var opacityRatio = 1 - this.timer / this.duration;\n        var minOpacity = 50;\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n\n        this.timer += dt;\n    },\n});\n"]}